<!-- -*- mode: nxml -*- -->
<configure	xmlns="http://namespaces.zope.org/zope"
			xmlns:i18n="http://namespaces.zope.org/i18n"
			xmlns:zcml="http://namespaces.zope.org/zcml"
			xmlns:ext="http://nextthought.com/ntp/ext"
			xmlns:solr="http://nextthought.com/ntp/solr"
			i18n_domain="zope">

	<include package="zope.component" file="meta.zcml" />
	<include package="zope.security" file="meta.zcml" />
	<include package="zope.component" />
	<include package="zope.security" />

	<include package="nti.contentindexing" />
	<include package="nti.contentprocessing" />

	<include package="." file="meta.zcml" />

	<!-- Job runner -->
	<include package="nti.async" />

	<!-- Externalization -->
	<include package="nti.externalization" file="meta.zcml" />
	<include package="nti.externalization" />

	<ext:registerAutoPackageIO
		root_interfaces=".interfaces.IAssetDocument
						 .interfaces.IEntityDocument
						 .interfaces.IMetadataDocument
						 .interfaces.ITranscriptDocument
						 .interfaces.IContentUnitDocument
						 .interfaces.ICourseCatalogDocument"
		modules=".metadata .transcripts .entities .contentunits .assets .courses" />

	<!-- Adapters -->
	<adapter factory=".adapters._StringValue"
			 provides=".interfaces.IStringValue"
			 for="basestring" />

	<!-- Metadata -->
	<adapter factory=".metadata._DefaultCreatorValue"
			 provides=".interfaces.ICreatorValue"
			 for="*" />

	<adapter factory=".metadata._DefaultIDValue"
			 provides=".interfaces.IIDValue"
			 for="*" />

 	<adapter factory=".metadata._DefaultMimeTypeValue"
			 provides=".interfaces.IMimeTypeValue"
			 for="*" />

 	<adapter factory=".metadata._DefaultNTIIDValue"
			 provides=".interfaces.INTIIDValue"
			 for="*" />

 	<adapter factory=".metadata._DefaultCreatedTimeValue"
			 provides=".interfaces.ICreatedTimeValue"
			 for="*" />

 	<adapter factory=".metadata._DefaultLastModifiedValue"
			 provides=".interfaces.ILastModifiedValue"
			 for="*" />

 	<adapter factory=".metadata._DefaultContainerIdValue"
			 provides=".interfaces.IContainerIdValue"
			 for="*" />

	<adapter factory=".metadata._DefaultSharedWithValue"
			 provides=".interfaces.ISharedWithValue"
			 for="*" />

	<adapter factory=".metadata._DefaultTaggedToValue"
			 provides=".interfaces.ITaggedToValue"
			 for="*" />

	<adapter factory=".metadata._DefaultInReplyToValue"
			 provides=".interfaces.IInReplyToValue"
			 for="*" />

	<adapter factory=".metadata._DefaultIsTopLevelContentValue"
			 provides=".interfaces.IIsTopLevelContentValue"
			 for="*" />

	<adapter factory=".metadata._DefaultIsDeletedObjectValue"
			 provides=".interfaces.IIsDeletedObjectValue"
			 for="*" />

	<adapter factory=".metadata._MetadataDocumentCreator"
			 provides=".interfaces.IMetadataDocument"
			 for="*" />

	<adapter factory=".externalization._MetadataDocumentSOLRExternalizer"
			 for=".interfaces.IMetadataDocument"
			 provides="nti.externalization.interfaces.IInternalObjectExternalizer"
			 name="solr" />

	<!-- Entities -->
	<adapter factory=".entities._DefaultUsernameValue"
			 provides=".interfaces.IUsernameValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultEmailValue"
			 provides=".interfaces.IEmailValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultAliasValue"
			 provides=".interfaces.IAliasValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultRealnameValue"
			 provides=".interfaces.IRealnameValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultProfessionalTitleValue"
			 provides=".interfaces.IProfessionalTitleValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultProfessionalCompanyValue"
			 provides=".interfaces.IProfessionalCompanyValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultProfessionalDescriptionValue"
			 provides=".interfaces.IProfessionalDescriptionValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultEducationDegreeValue"
			 provides=".interfaces.IEducationDegreeValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultEducationSchoolValue"
			 provides=".interfaces.IEducationSchoolValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultEducationDescriptionValue"
			 provides=".interfaces.IEducationDescriptionValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultSocialURLValue"
			 provides=".interfaces.ISocialURLValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._DefaultAboutValue"
			 provides=".interfaces.IAboutValue"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._EntityDocumentCreator"
			 provides=".interfaces.IEntityDocument"
			 for="nti.dataserver.interfaces.IEntity" />

	<adapter factory=".entities._entity_to_catalog"
			 provides=".interfaces.ICoreCatalog"
			 for="nti.dataserver.interfaces.IEntity" />

	<utility factory=".entities.EntitiesCatalog"
			 provides=".interfaces.ICoreCatalog"
			 name='entities' />

	<adapter factory=".externalization._EntityDocumentSOLRExternalizer"
			 for=".interfaces.IEntityDocument"
			 provides="nti.externalization.interfaces.IInternalObjectExternalizer"
			 name="solr" />

	<subscriber handler=".subscribers._entity_added"
				for="nti.dataserver.interfaces.IEntity
					 zope.intid.interfaces.IIntIdAddedEvent"/>

	<subscriber handler=".subscribers._entity_removed"
				for="nti.dataserver.interfaces.IEntity
					 zope.intid.interfaces.IIntIdRemovedEvent"/>

	<subscriber handler=".subscribers._entity_modified"
				for="nti.dataserver.interfaces.IEntity
					 zope.lifecycleevent.interfaces.IObjectModifiedEvent"/>

	<!-- Content Units -->
	<adapter factory=".contentunits._DefaultContentUnitIDValue"
			 provides=".interfaces.IIDValue"
			 for="nti.contentlibrary.interfaces.IContentUnit" />

	<adapter factory=".contentunits._DefaultContentPackageValue"
			 provides=".interfaces.IContentPackageValue"
			 for="nti.contentlibrary.interfaces.IContentUnit" />

	<adapter factory=".contentunits._DefaultTitleValue"
			 provides=".interfaces.ITitleValue"
			 for="nti.contentlibrary.interfaces.IContentUnit" />

	<adapter factory=".contentunits._DefaultContentUnitContentValue"
			 provides=".interfaces.IContentValue"
			 for="nti.contentlibrary.interfaces.IContentUnit" />

	<adapter factory=".contentunits._DefaultContentUnitKeywordsValue"
			 provides=".interfaces.IKeywordsValue"
			 for="nti.contentlibrary.interfaces.IContentUnit" />

	<adapter factory=".contentunits._ContentUnitDocumentCreator"
			 provides=".interfaces.IContentUnitDocument"
			 for="nti.contentlibrary.interfaces.IContentUnit" />

	<adapter factory=".contentunits._contentunit_to_catalog"
			 provides=".interfaces.ICoreCatalog"
			 for="nti.contentlibrary.interfaces.IContentUnit" />
	
	<utility factory=".contentunits.ContentUnitsCatalog"
			 provides=".interfaces.ICoreCatalog"
			 name='contentunits' />
				 
	<adapter factory=".externalization._ContentUnitDocumentSOLRExternalizer"
			 for=".interfaces.IContentUnitDocument"
			 provides="nti.externalization.interfaces.IInternalObjectExternalizer"
			 name="solr" />

	<subscriber handler=".subscribers._contentunit_added"
				for="nti.contentlibrary.interfaces.IContentUnit
					 zope.intid.interfaces.IIntIdAddedEvent"/>

	<subscriber handler=".subscribers._contentunit_removed"
				for="nti.contentlibrary.interfaces.IContentUnit
					 zope.intid.interfaces.IIntIdRemovedEvent"/>

	<subscriber handler=".subscribers._contentunit_modified"
				for="nti.contentlibrary.interfaces.IContentUnit
					 zope.lifecycleevent.interfaces.IObjectModifiedEvent"/>

	<subscriber handler=".subscribers._index_contentunit"
				for="nti.contentlibrary.interfaces.IContentUnit
					 .interfaces.IIndexObjectEvent"/>

	<subscriber handler=".subscribers._unindex_contentunit"
				for="nti.contentlibrary.interfaces.IContentUnit
					 .interfaces.IUnindexObjectEvent"/>

	<!-- Assets -->
	<adapter factory=".assets._DefaultAssetTitleValue"
			 provides=".interfaces.ITitleValue"
			 for="nti.contenttypes.presentation.interfaces.IPresentationAsset" />

	<adapter factory=".assets._DefaultAssetCreatorValue"
			 provides=".interfaces.ICreatorValue"
			 for="nti.contenttypes.presentation.interfaces.IPresentationAsset" />

	<adapter factory=".assets._DefaultAssetContentValue"
			 provides=".interfaces.IContentValue"
			 for="nti.contenttypes.presentation.interfaces.IPresentationAsset" />

 	<adapter factory=".assets._DefaultContainerIdValue"
			 provides=".interfaces.IContainerIdValue"
			 for="nti.contenttypes.presentation.interfaces.IPresentationAsset" />

	<adapter factory=".assets._DefaultAssetKeywordsValue"
			 provides=".interfaces.IKeywordsValue"
			 for="nti.contenttypes.presentation.interfaces.IPresentationAsset" />

	<adapter factory=".assets._AssetDocumentCreator"
			 provides=".interfaces.IAssetDocument"
			 for="nti.contenttypes.presentation.interfaces.IPresentationAsset" />

	<adapter factory=".assets._asset_to_catalog"
			 provides=".interfaces.ICoreCatalog"
			 for="nti.contenttypes.presentation.interfaces.IPresentationAsset" />
	
	<utility factory=".assets.AssetsCatalog"
			 provides=".interfaces.ICoreCatalog"
			 name='assets' />
				 
	<adapter factory=".externalization._AssetDocumentSOLRExternalizer"
			 for=".interfaces.IAssetDocument"
			 provides="nti.externalization.interfaces.IInternalObjectExternalizer"
			 name="solr" />

	<subscriber handler=".subscribers._asset_added"
				for="nti.contenttypes.presentation.interfaces.IPresentationAsset
					 zope.intid.interfaces.IIntIdAddedEvent"/>

	<subscriber handler=".subscribers._asset_removed"
				for="nti.contenttypes.presentation.interfaces.IPresentationAsset
					 zope.intid.interfaces.IIntIdRemovedEvent"/>

	<subscriber handler=".subscribers._asset_modified"
				for="nti.contenttypes.presentation.interfaces.IPresentationAsset
					 zope.lifecycleevent.interfaces.IObjectModifiedEvent"/>

	<subscriber handler=".subscribers._index_asset"
				for="nti.contenttypes.presentation.interfaces.IPresentationAsset
					 .interfaces.IIndexObjectEvent"/>

	<!-- Courses -->
	<configure zcml:condition="installed nti.contenttypes.courses">
		<adapter factory=".courses._DefaultCourseCatalogTitleValue"
				 provides=".interfaces.ITitleValue"
				 for="nti.contenttypes.courses.interfaces.ICourseInstance" />

		<adapter factory=".courses._DefaultCourseCatalogContentValue"
				 provides=".interfaces.IContentValue"
				 for="nti.contenttypes.courses.interfaces.ICourseInstance" />

		<adapter factory=".courses._DefaultCourseCatalogKeywordsValue"
				 provides=".interfaces.IKeywordsValue"
				 for="nti.contenttypes.courses.interfaces.ICourseInstance" />
				 
		<adapter factory=".courses._DefaultNTIIDValue"
				 provides=".interfaces.INTIIDValue"
				 for="nti.contenttypes.courses.interfaces.ICourseInstance" />

		<adapter factory=".courses._CourseCatalogDocumentCreator"
				 provides=".interfaces.ICourseCatalogDocument"
				 for="nti.contenttypes.courses.interfaces.ICourseInstance" />

		<adapter factory=".courses._course_to_catalog"
				 provides=".interfaces.ICoreCatalog"
			 	 for="nti.contenttypes.courses.interfaces.ICourseInstance" />
	
		<utility factory=".courses.CoursesCatalog"
			 	 provides=".interfaces.ICoreCatalog"
			 	 name='courses' />
				 
		<adapter factory=".externalization._CourseCatalogDocumentSOLRExternalizer"
				 for=".interfaces.ICourseCatalogDocument"
				 provides="nti.externalization.interfaces.IInternalObjectExternalizer"
				 name="solr" />
				 
		<subscriber handler=".subscribers._course_added"
					for="nti.contenttypes.courses.interfaces.ICourseInstance
						 zope.intid.interfaces.IIntIdAddedEvent"/>

		<subscriber handler=".subscribers._course_removed"
					for="nti.contenttypes.courses.interfaces.ICourseInstance
					 	 zope.intid.interfaces.IIntIdRemovedEvent"/>

		<subscriber handler=".subscribers._course_modified"
					for="nti.contenttypes.courses.interfaces.ICourseInstance
						 zope.lifecycleevent.interfaces.IObjectModifiedEvent"/>

		<subscriber handler=".subscribers._index_course"
					for="nti.contenttypes.courses.interfaces.ICourseInstance
					 	 .interfaces.IIndexObjectEvent"/>
	</configure>

	<!-- Assessments / Evaluations -->
	<configure zcml:condition="installed nti.assessment">
		<adapter factory=".evaluations._DefaultEvaluationTitleValue"
				 provides=".interfaces.ITitleValue"
				 for="nti.assessment.interfaces.IQEvaluation" />

		<adapter factory=".evaluations._DefaultEvaluationContentValue"
				 provides=".interfaces.IContentValue"
				 for="nti.assessment.interfaces.IQEvaluation" />

		<adapter factory=".evaluations._DefaultContainerIdValue"
				 provides=".interfaces.IContainerIdValue"
				 for="nti.assessment.interfaces.IQEvaluation" />

		<adapter factory=".evaluations._DefaultEvaluationKeywordsValue"
				 provides=".interfaces.IKeywordsValue"
				 for="nti.assessment.interfaces.IQEvaluation" />

		<adapter factory=".evaluations._EvaluationDocumentCreator"
				 provides=".interfaces.IEvaluationDocument"
				 for="nti.assessment.interfaces.IQEvaluation" />

		<adapter factory=".evaluations._evaluation_to_catalog"
				 provides=".interfaces.ICoreCatalog"
				 for="nti.assessment.interfaces.IQEvaluation" />
	
		<utility factory=".evaluations.EvaluationsCatalog"
				 provides=".interfaces.ICoreCatalog"
				 name='evaluations' />

		<adapter factory=".externalization._EvaluationDocumentSOLRExternalizer"
				 for=".interfaces.IEvaluationDocument"
				 provides="nti.externalization.interfaces.IInternalObjectExternalizer"
				 name="solr" />
				 
		<subscriber handler=".subscribers._evaluation_added"
					for="nti.assessment.interfaces.IQEvaluation
						 zope.intid.interfaces.IIntIdAddedEvent"/>

		<subscriber handler=".subscribers._evaluation_removed"
					for="nti.assessment.interfaces.IQEvaluation
						 zope.intid.interfaces.IIntIdRemovedEvent"/>
	
		<subscriber handler=".subscribers._evaluation_modified"
					for="nti.assessment.interfaces.IQEvaluation
						 zope.lifecycleevent.interfaces.IObjectModifiedEvent"/>
						 
		<subscriber handler=".subscribers._evaluation_published"
					for="nti.assessment.interfaces.IQEvaluation
						 nti.coremetadata.interfaces.IObjectPublishedEvent"/>
 
 		<subscriber handler=".subscribers._evaluation_unpublished"
					for="nti.assessment.interfaces.IQEvaluation
						 nti.coremetadata.interfaces.IObjectUnpublishedEvent"/>

		<subscriber handler=".subscribers._index_evaluation"
					for="nti.assessment.interfaces.IQEvaluation
					 	 .interfaces.IIndexObjectEvent"/>
	</configure>

	<!-- Transcripts -->
	<adapter factory=".transcripts._TranscriptIDValue"
			 provides=".interfaces.IIDValue"
			 for="nti.contenttypes.presentation.interfaces.INTITranscript" />

	<adapter factory=".transcripts._TranscriptMediaNTIIDValue"
			 provides=".interfaces.IMediaNTIIDValue"
			 for="nti.contenttypes.presentation.interfaces.INTITranscript" />

	<adapter factory=".transcripts._TranscriptContentValue"
			 provides=".interfaces.IContentValue"
			 for="nti.contenttypes.presentation.interfaces.INTITranscript" />

	<adapter factory=".transcripts._TranscriptKeywordsValue"
			 provides=".interfaces.IKeywordsValue"
			 for="nti.contenttypes.presentation.interfaces.INTITranscript" />

	<adapter factory=".transcripts._TranscriptDocumentCreator"
			 provides=".interfaces.ITranscriptDocument"
			 for="nti.contenttypes.presentation.interfaces.INTITranscript" />

	<adapter factory=".transcripts._transcript_to_catalog"
			 provides=".interfaces.ICoreCatalog"
			 for="nti.contenttypes.presentation.interfaces.INTITranscript" />
	
	<utility factory=".transcripts.TranscriptsCatalog"
			 	 provides=".interfaces.ICoreCatalog"
			 	 name='transcripts' />

	<adapter factory=".externalization._TranscriptDocumentSOLRExternalizer"
			 for=".interfaces.ITranscriptDocument"
			 provides="nti.externalization.interfaces.IInternalObjectExternalizer"
			 name="solr" />

	<subscriber handler=".subscribers._index_transcript"
				for="nti.contenttypes.presentation.interfaces.INTITranscript
				 	 .interfaces.IIndexObjectEvent"/>
					 	
	<!-- User Generated Data -->
	<adapter factory=".userdata._DefaultUserDataTitleValue"
			 provides=".interfaces.ITitleValue"
			 for="nti.dataserver.interfaces.IUserGeneratedData" />

	<adapter factory=".userdata._DefaultUserDataContentValue"
			 provides=".interfaces.IContentValue"
			 for="nti.dataserver.interfaces.IUserGeneratedData" />

	<adapter factory=".userdata._DefaultUserDataKeywordsValue"
			 provides=".interfaces.IKeywordsValue"
			 for="nti.dataserver.interfaces.IUserGeneratedData" />

	<adapter factory=".userdata._UserDataDocumentCreator"
			 provides=".interfaces.IUserDataDocument"
			 for="nti.dataserver.interfaces.IUserGeneratedData" />

	<adapter factory=".userdata._userdata_to_catalog"
			 provides=".interfaces.ICoreCatalog"
			 for="nti.dataserver.interfaces.IUserGeneratedData" />

	<utility factory=".userdata.UserDataCatalog"
			 provides=".interfaces.ICoreCatalog"
			 name='userdata' />

	<adapter factory=".externalization._UserDataDocumentSOLRExternalizer"
			 for=".interfaces.IUserDataDocument"
			 provides="nti.externalization.interfaces.IInternalObjectExternalizer"
			 name="solr" />

	<subscriber handler=".subscribers._userdata_added"
				for="nti.dataserver.interfaces.IUserGeneratedData
					 zope.intid.interfaces.IIntIdAddedEvent"/>

	<subscriber handler=".subscribers._userdata_removed"
				for="nti.dataserver.interfaces.IUserGeneratedData
					 zope.intid.interfaces.IIntIdRemovedEvent"/>

	<subscriber handler=".subscribers._userdata_modified"
				for="nti.dataserver.interfaces.IUserGeneratedData
					 zope.lifecycleevent.interfaces.IObjectModifiedEvent"/>

	<subscriber handler=".subscribers._index_userdata"
				for="nti.dataserver.interfaces.IUserGeneratedData
				 	 .interfaces.IIndexObjectEvent"/>
				 	 
	<!-- Utilities -->
	<utility factory=".termextract._DefaultKeyWordFilter" name='solr' />

	<!-- Subscribers -->

	<configure zcml:condition="have devmode">
		<solr:registerSOLR url="http://localhost:8983/solr" />
	</configure>

	<!-- Queues -->
	<configure zcml:condition="have devmode">
		<configure zcml:condition="not-have testmode">
			<solr:registerProcessingQueue />
		</configure>
		<configure zcml:condition="have testmode">
			<solr:registerImmediateProcessingQueue />
		</configure>
	</configure>
	<configure zcml:condition="not-have devmode">
		<solr:registerRedisProcessingQueue />
	</configure>

</configure>
